SUBJECT_FILE=allocator
SUBJECT_PARENT=kernel
SUBJECT=${SUBJECT_PARENT}/${SUBJECT_FILE}

COMPILER?=gcc
PREFIX?= ${HOME}/Programmering/OS
SYSROOT=${PREFIX}/sysroot
BUILD=${PREFIX}/tests/kernel/build
KERNEL=${PREFIX}/sysroot/kernel
TESTS=${PREFIX}/tests
LIBS=${SYSROOT}/lib
MOCKS=${PREFIX}/tests/kernel/mocks

SUBJECT_SOURCE=${SYSROOT}/${SUBJECT}.c
TEST_FILE=${SUBJECT}-test.c

INCLUDE=-I ${PREFIX}/sysroot/kernel/include -I ${LIBS}/include -I ${PREFIX}/sysroot/kernel -I ${PREFIX}/tests -I ${MOCKS} -I ${PREFIX}/utils/include
CFLAGS?= -std=gnu99 -Wno-builtin-declaration-mismatch ${INCLUDE}

# CFLAGS?= -O2 -std=gnu99 -ffreestanding -mno-red-zone -Wall -Wextra ${INCLUDE}

LINK_FLAGS?= -nostdlib -lgcc -ffreestanding -O2


# OBJS = ${BUILD}/boot.o \
# 	   ${BUILD}/test.o \
# 	   ${BUILD}/testrunner.o \
# 	   ${BUILD}/interrupt.o \
# 	   ${BUILD}/logging.o \
# 	   ${BUILD}/kernel-io.o \
# 	   ${BUILD}/memory.o \
# 	   ${BUILD}/mass-storage-device-mock.o \
# 	   ${BUILD}/buffered-storage-mock.o \
# 	   ${BUILD}/${SUBJECT_FILE}.o \

# all : ${PREFIX}/build/os.img ${OBJS}
# 	echo ${PREFIX}
# 	$(MAKE) lib
# 	${COMPILER} -T ${PREFIX}/linker.ld ${OBJS} ${LIBS}/build/lib.out ${LINK_FLAGS}  -o ${PREFIX}/build/os.elf
# 	objcopy -O binary ${PREFIX}/build/os.elf ${PREFIX}/build/os.bin

# # Timer test
# test.o : testrunner2.c ${TESTS}/kernel/timer-test.c ${KERNEL}/timer.c ${MOCKS}/memory-mock.c ${LIBS}/collection/list/linked-list.c ${LIBS}/collection/list/list.c
# 	gcc ${CFLAGS} ${INCLUDE} testrunner2.c ${TESTS}/kernel/timer-test.c ${MOCKS}/memory-mock.c ${KERNEL}/timer.c ${LIBS}/collection/list/linked-list.c ${LIBS}/collection/list/list.c -o test.o

# # Allocator test
# test.o : testrunner2.c ${TESTS}/kernel/allocator-test.c ${KERNEL}/allocator.c ${MOCKS}/memory-mock.c
# 	gcc ${CFLAGS} ${INCLUDE} testrunner2.c ${TESTS}/kernel/allocator-test.c ${MOCKS}/memory-mock.c ${KERNEL}/allocator.c  -o test.o

# # Linked list test
# test.o : testrunner2.c ${TESTS}/lib/list/linked-list-test.c ${LIBS}/collection/list/linked-list.c ${LIBS}/collection/list/intlist.c ${MOCKS}/memory-mock.c ${LIBS}/collection/int-iterator.c
# 	gcc ${CFLAGS} testrunner2.c ${TESTS}/lib/list/linked-list-test.c ${MOCKS}/memory-mock.c ${LIBS}/collection/list/linked-list.c ${LIBS}/collection/list/intlist.c  ${LIBS}/collection/int-iterator.c -o test.o

# # Binary map test
# test.o : testrunner2.c ${TESTS}/lib/binary-map-test.c ${LIBS}/collection/map/binary-map.c ${LIBS}/collection/map/intmap.c ${LIBS}/collection/map/map.c ${MOCKS}/memory-mock.c 
# 	gcc ${CFLAGS} testrunner2.c ${TESTS}/lib/binary-map-test.c ${MOCKS}/memory-mock.c ${LIBS}/collection/map/binary-map.c ${LIBS}/collection/map/intmap.c ${LIBS}/collection/map/map.c  -o test.o


#Ignoring phsypage # FIXME: Remove tests for physpage? New implementation that uses allocator, might not need testing? Or rewrite tests.
# test.o : testrunner2.c ${TESTS}/kernel/physpage-test.c ${MOCKS}/memory-mock.c
# 	gcc ${CFLAGS} ${INCLUDE} -I ${KERNEL} testrunner2.c ${TESTS}/kernel/physpage-test.c ${MOCKS}/memory-mock.c -o test.o

# # Buffered storage test
# test.o : testrunner2.c ${TESTS}/kernel/buffered-storage-test.c ${MOCKS}/memory-mock.c
# 	gcc ${CFLAGS} ${INCLUDE} -I ${KERNEL} testrunner2.c ${TESTS}/kernel/buffered-storage-test.c ${MOCKS}/memory-mock.c -o test.o

# Fat test
test.o : testrunner2.c ${TESTS}/kernel/fat-test.c ${MOCKS}/memory-mock.c ${MOCKS}/buffered-storage-mock.c ${MOCKS}/mass-storage-device-mock.c ${MOCKS}/logging-mock.c ${LIBS}/string/string.c
	gcc ${CFLAGS} ${INCLUDE} -I ${KERNEL} testrunner2.c ${TESTS}/kernel/fat-test.c ${MOCKS}/buffered-storage-mock.c ${MOCKS}/mass-storage-device-mock.c ${MOCKS}/memory-mock.c ${MOCKS}/logging-mock.c ${LIBS}/string/string.c -o test.o


clean :
	rm test.o

# ${PREFIX}/build/os.img : ${PREFIX}/build ${OBJS}
# 	dd if=/dev/zero of=${PREFIX}/build/os.img bs=512 count=2048

# ${BUILD} : 
# 	mkdir ${BUILD}

# ${PREFIX}/build : 
# 	mkdir ${PREFIX}/build

